@use "sass:math";

$glyph-width: 194px;
$glyph-height: 350px;
$glyph-gutter: 39px;

html,
body {
  font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir, segoe ui,
    helvetica neue, helvetica, Ubuntu, roboto, noto, arial, sans-serif;
  text-align: center;
}

header a {
  color: black;
  text-decoration-color: blue;
}

main {
  width: $glyph-width * 2;
  height: $glyph-height * 1.35;
  margin: 0 auto;
  position: relative;
}

input[type="tel"] {
  width: 100%;
  font-size: 1.5em;
  text-align: center;
  margin-bottom: 0.5em;
}

input[type="checkbox"] {
  font-size: 1.5em;
  text-align: center;
}

small {
  color: red;
  margin-left: 2em;
}

#entry {
  display: grid;
  grid-template-columns: 80% auto;
}

#numerals {
  margin-top: 2em;
}

#wrap {
  display: grid;
  grid-template-columns: 50% 50%;

  div {
    text-align: left;
  }

  small {
    text-align: right;
  }
}

.flipped {
  transform: rotate(-90deg);
  transform-origin: 175px 150px;
}

div[data-number] {
  background-image: url("./sprite-v2.png");
  background-repeat: no-repeat;
  height: $glyph-height;
  position: absolute;
  width: $glyph-width;
  left: math.div($glyph-width, 2);
}

@each $i in 1, 2, 3, 4, 5, 6, 7, 8, 9 {
  div[data-number="#{$i}"] {
    background-position: (-1) *
      (($i - 1) * $glyph-width + ($i - 1) * $glyph-gutter)
      0px;
  }
}

@each $i in 10, 20, 30, 40, 50, 60, 70, 80, 90 {
  div[data-number="#{$i}"] {
    background-position: (-1) *
      (
        (math.div($i, 10) - 1) *
          $glyph-width +
          (math.div($i, 10) - 1) *
          $glyph-gutter
      )
      0px;
    transform: scaleX(-1);
  }
}

@each $i in 100, 200, 300, 400, 500, 600, 700, 800, 900 {
  div[data-number="#{$i}"] {
    background-position: (-1) *
      (
        (math.div($i, 100) - 1) *
          $glyph-width +
          (math.div($i, 100) - 1) *
          $glyph-gutter
      )
      0px;
    transform: scaleY(-1);
  }
}

@each $i in 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000 {
  div[data-number="#{$i}"] {
    background-position: (-1) *
      (
        (math.div($i, 1000) - 1) *
          $glyph-width +
          (math.div($i, 1000) - 1) *
          $glyph-gutter
      )
      0px;
    transform: scale(-1, -1);
  }
}
